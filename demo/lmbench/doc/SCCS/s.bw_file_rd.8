h00127
s 00013/00000/00046
d D 1.2 00/10/16 17:13:35 staelin 3 2
c - Update man pages to match current status
cC
cHhpli8.hpli.hpl.hp.com
cK31424
cZ+02:00
e
s 00046/00000/00000
d D 1.1 94/11/18 01:26:35 lm 2 1
c Initial revision
cC
cK17017
e
s 00000/00000/00000
d D 1.0 94/11/18 01:26:34 lm 1 0
cBlm@lm.bitmover.com|ChangeSet|20000131225335|47351|--LMBENCH--
cHlm.bitmover.com
cK04071
cPdoc/bw_file_rd.8
cR25620ef556775f09
cV4
cX0x23
cZ-08:00
e
u
U
f e 0
f x 0x23
t
lmbench doc checkin
T
I 2
.\" $Id$
.TH BW_FILE_RD 8 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
.SH NAME
bw_file_rd \- time the reading and summing of a file
.SH SYNOPSIS
.B bw_file_rd
I 3
[
.I "-P <parallelism>"
]
[
.I "-W <warmups>"
]
[
.I "-N <repetitions>"
]
E 3
.I size
.I file
.SH DESCRIPTION
.B bw_file_rd
times the read of the specified file in 64KB blocks. Each block is summed
up as a seried of 4 byte integers in an unrolled loop.
Results are reported in megabytes read per second.
.LP
The data is not accessed in the user program; the benchmark relies on
the operating systems read interface to have actually moved the data.
Systems that implement page flipping may fool this benchmark.
.LP
The benchmark is intended to be used on a file 
that is in memory, i.e., the benchmark is a reread benchmark.  Other
file benchmarking can be done with 
.BR lmdd (8).
.LP
The size
specification may end with ``k'' or ``m'' to mean
kilobytes (* 1024) or megabytes (* 1024 * 1024).
.SH OUTPUT
Output format is \f(CB"%0.2f %.2f\\n", megabytes, megabytes_per_second\fP, i.e.,
.sp
.ft CB
8.00 25.33
.ft
.SH MEMORY UTILIZATION
This benchmark can move up to three times the requested memory.  Most Unix
systems implement the read system call as a bcopy from kernel space
to user space.  Bcopy will use 2-3 times as much memory bandwidth:
there is one read from the source and a write to the destionation.  The
write usually results in a cache line read and then a write back of
the cache line at some later point.  Memory utilization might be reduced
by 1/3 if the processor architecture implemented ``load cache line''
and ``store cache line'' instructions (as well as ``getcachelinesize'').
.SH ACKNOWLEDGEMENT
Funding for the development of
this tool was provided by Sun Microsystems Computer Corporation.
.SH "SEE ALSO"
lmbench(8).
I 3
.SH "AUTHOR"
Carl Staelin and Larry McVoy
.PP
Comments, suggestions, and bug reports are always welcome.
E 3
E 2
I 1
E 1
