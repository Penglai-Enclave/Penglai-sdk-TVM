h61948
s 00003/00003/00195
d D 1.5 95/11/11 16:36:30 lm 6 5
c *** empty log message ***
cC
cK12872
e
s 00066/00049/00132
d D 1.4 95/11/08 20:37:29 lm 5 4
c switch to Linux version and label.
cK12876
cZ-08:00
e
s 00000/00002/00181
d D 1.3 95/09/28 11:14:34 lm 4 3
c no .po.
cK34108
cZ-07:00
e
s 00002/00002/00181
d D 1.2 94/11/23 17:20:37 lm 3 2
c fix title.
cK34954
e
s 00183/00000/00000
d D 1.1 94/11/18 01:27:09 lm 2 1
c Initial revision
cK34888
e
s 00000/00000/00000
d D 1.0 94/11/18 01:27:08 lm 1 0
cBlm@lm.bitmover.com|ChangeSet|20000131225335|47351|--LMBENCH--
cHlm.bitmover.com
cK03631
cPdoc/ctx.pic
cR2e58e73e6a4a0f41
cV4
cX0x23
cZ-08:00
e
u
U
f e 0
f x 0x23
t
T
I 2
D 5
.sp .1i
E 5
I 5
D 6
.sp .15i
E 6
I 6
.sp .10i
E 6
.in +.07i
E 5
D 3
.po .65i
E 3
I 3
D 4
.po .72i
E 4
E 3
.PS
.ps 9
.vs 9
.ft CB
[
# Variables, tweak these.
	xtick = 2.000000			# width of an X tick
	xlower = 0.000000			# where the xtick start
	xupper = 22.000000			# upper range of graph
	xn = 11					# number of ticks to do
	ytick = 50.000000			# width of an Y tick
	ylower = 0.000000			# where the ytick start
D 5
	yupper = 850.000000			# upper range of graph
	yn = 17					# number of ticks to do
	xsize = 2.1				# width of the graph
	ysize = xsize				# height of the graph
E 5
I 5
	yupper = 450.000000			# upper range of graph
	yn = 9					# number of ticks to do
	xsize = 2.05				# width of the graph
	ysize = 2.1				# height of the graph
E 5
	yscale = ysize / (yupper - ylower)	# scale data to paper
	xscale = xsize / (xupper - xlower)	# scale data to paper
D 5
	tick = 0.14999999999999999445		# distance towards numbers
E 5
I 5
	tick = 0.10000000000000001				# distance towards numbers
E 5
	gthk = .1				# thickness of grid lines
D 5
	thk = .75				# thickness of data lines
E 5
I 5
	thk = 0.75				# thickness of data lines
E 5
	qthk = 2.0				# thickness of quartile lines
	vs = .10				# works for 10 point fonts

# Draw the graph borders and tick marks
	O:	box  thick 1.5 ht ysize wid xsize
	j = ylower
	t = tick * .5
	for i = 0 to yn by 1 do {
		ys = j - ylower
		g = ys * yscale
		line thick 1.5 from O.sw + (-tick, g) to O.sw + (0, g)
		
		if (i < yn) then {
			y2 = (ys + (ytick / 2)) * yscale
			line thick .5 from O.sw + (-t, y2) to O.sw + (0, y2)
		}
		if (yupper - ylower > 999) then {
			sprintf("%.0f", j) rjust at O.sw + (-.2, g - .02)
		} else { if (yupper - ylower > 10) then {
			sprintf("%.0f", j) rjust at O.sw + (-.2, g - .02)
		} else { if (yupper - ylower > 1) then {
			sprintf("%.1f", j) rjust at O.sw + (-.2, g - .02)
		} else {
			sprintf("%.2f", j) rjust at O.sw + (-.2, g - .02)
		}}}
		j = j + ytick
	}
	j = xlower
	for i = 0 to xn by 1 do {
		xs = j - xlower
		g = xs * xscale
		line thick 1.5 from O.sw + (g, -tick) to O.sw + (g, 0)
		
		if (i < xn) then {
			x2 = (xs + (xtick / 2)) * xscale
			line thick .5 from O.sw + (x2, 0) to O.sw + (x2, -t)
		}
		if (xupper - xlower > 999) then {
			sprintf("%.0f", j) at O.sw + (g, -.25)
		} else { if (xupper - xlower > 10) then {
			sprintf("%.0f", j) at O.sw + (g, -.25)
		} else { if (xupper - xlower > 1) then {
			sprintf("%.1f", j) at O.sw + (g, -.25)
		} else {
			sprintf("%.2f", j) at O.sw + (g, -.25)
		}}}
		j = j + xtick
	}

D 5
# DATASET: size=0	overhead=72, MARK 0
E 5
I 5
# DATASET: Process size=0	overhead=10, MARK 0
E 5
[ "\(ci" ] at O.sw + \
D 5
	(xscale * (2 - xlower), yscale * (25 - ylower))
E 5
I 5
	(xscale * (2 - xlower), yscale * (6 - ylower))
E 5
[ "\(ci" ] at O.sw + \
D 5
	(xscale * (4 - xlower), yscale * (27 - ylower))
E 5
I 5
	(xscale * (4 - xlower), yscale * (7 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(ci" ] at O.sw + \
D 5
	(xscale * (8 - xlower), yscale * (29 - ylower))
E 5
I 5
	(xscale * (8 - xlower), yscale * (7 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(ci" ] at O.sw + \
D 5
	(xscale * (16 - xlower), yscale * (35 - ylower))
E 5
I 5
	(xscale * (16 - xlower), yscale * (8 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(ci" ] at O.sw + \
D 5
	(xscale * (20 - xlower), yscale * (37 - ylower))
E 5
I 5
	(xscale * (20 - xlower), yscale * (8 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c

D 5
# DATASET: size=4	overhead=108, MARK 1
E 5
I 5
# DATASET: Process size=4	overhead=19, MARK 1
E 5
[ "\(sq" ] at O.sw + \
D 5
	(xscale * (2 - xlower), yscale * (25 - ylower))
E 5
I 5
	(xscale * (2 - xlower), yscale * (7 - ylower))
E 5
[ "\(sq" ] at O.sw + \
D 5
	(xscale * (4 - xlower), yscale * (28 - ylower))
E 5
I 5
	(xscale * (4 - xlower), yscale * (8 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(sq" ] at O.sw + \
D 5
	(xscale * (8 - xlower), yscale * (33 - ylower))
E 5
I 5
	(xscale * (8 - xlower), yscale * (9 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(sq" ] at O.sw + \
D 5
	(xscale * (16 - xlower), yscale * (40 - ylower))
E 5
I 5
	(xscale * (16 - xlower), yscale * (10 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(sq" ] at O.sw + \
D 5
	(xscale * (20 - xlower), yscale * (47 - ylower))
E 5
I 5
	(xscale * (20 - xlower), yscale * (12 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c

D 5
# DATASET: size=16	overhead=348, MARK 2
E 5
I 5
# DATASET: Process size=16	overhead=66, MARK 2
E 5
[ "\(*D" ] at O.sw + \
D 5
	(xscale * (2 - xlower), yscale * (28 - ylower))
E 5
I 5
	(xscale * (2 - xlower), yscale * (14 - ylower))
E 5
[ "\(*D" ] at O.sw + \
D 5
	(xscale * (4 - xlower), yscale * (32 - ylower))
E 5
I 5
	(xscale * (4 - xlower), yscale * (15 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(*D" ] at O.sw + \
D 5
	(xscale * (8 - xlower), yscale * (57 - ylower))
E 5
I 5
	(xscale * (8 - xlower), yscale * (18 - ylower))
".12M" at O.sw + \
	(xscale * (8 - xlower), .12 + yscale * (18 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(*D" ] at O.sw + \
D 5
	(xscale * (16 - xlower), yscale * (149 - ylower))
E 5
I 5
	(xscale * (16 - xlower), yscale * (46 - ylower))
".25M" at O.sw + \
	(xscale * (16 - xlower), .12 + yscale * (46 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(*D" ] at O.sw + \
D 5
	(xscale * (20 - xlower), yscale * (176 - ylower))
E 5
I 5
	(xscale * (20 - xlower), yscale * (88 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c

D 5
# DATASET: size=32	overhead=664, MARK 3
E 5
I 5
# DATASET: Process size=32	overhead=129, MARK 3
E 5
[ "\(mu" ] at O.sw + \
D 5
	(xscale * (2 - xlower), yscale * (29 - ylower))
E 5
I 5
	(xscale * (2 - xlower), yscale * (22 - ylower))
E 5
[ "\(mu" ] at O.sw + \
D 5
	(xscale * (4 - xlower), yscale * (60 - ylower))
E 5
I 5
	(xscale * (4 - xlower), yscale * (24 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(mu" ] at O.sw + \
D 5
	(xscale * (8 - xlower), yscale * (220 - ylower))
E 5
I 5
	(xscale * (8 - xlower), yscale * (107 - ylower))
".25M" at O.sw + \
	(xscale * (8 - xlower), .12 + yscale * (107 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(mu" ] at O.sw + \
D 5
	(xscale * (16 - xlower), yscale * (371 - ylower))
E 5
I 5
	(xscale * (16 - xlower), yscale * (187 - ylower))
".5M" at O.sw + \
	(xscale * (16 - xlower), .12 + yscale * (187 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\(mu" ] at O.sw + \
D 5
	(xscale * (20 - xlower), yscale * (400 - ylower))
E 5
I 5
	(xscale * (20 - xlower), yscale * (188 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c

D 5
# DATASET: size=64	overhead=1305, MARK 4
E 5
I 5
# DATASET: Process size=64	overhead=255, MARK 4
E 5
[ "\s+4\(bu\s0" ] at O.sw + \
D 5
	(xscale * (2 - xlower), yscale * (35 - ylower))
E 5
I 5
	(xscale * (2 - xlower), yscale * (38 - ylower))
".12M" at O.sw + \
	(xscale * (2 - xlower), .12 + yscale * (38 - ylower))
E 5
[ "\s+4\(bu\s0" ] at O.sw + \
D 5
	(xscale * (4 - xlower), yscale * (241 - ylower))
E 5
I 5
	(xscale * (4 - xlower), yscale * (140 - ylower))
".25M" at O.sw + \
	(xscale * (4 - xlower) - .14, .12 + yscale * (140 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\s+4\(bu\s0" ] at O.sw + \
D 5
	(xscale * (8 - xlower), yscale * (679 - ylower))
E 5
I 5
	(xscale * (8 - xlower), yscale * (363 - ylower))
".5M" at O.sw + \
	(xscale * (8 - xlower), .12 + yscale * (363 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\s+4\(bu\s0" ] at O.sw + \
D 5
	(xscale * (16 - xlower), yscale * (790 - ylower))
E 5
I 5
	(xscale * (16 - xlower), yscale * (367 - ylower))
"1M" at O.sw + \
	(xscale * (16 - xlower), .12 + yscale * (367 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c
[ "\s+4\(bu\s0" ] at O.sw + \
D 5
	(xscale * (20 - xlower), yscale * (798 - ylower))
E 5
I 5
	(xscale * (20 - xlower), yscale * (367 - ylower))
E 5
line thick thk from 2nd last [].c to last [].c

# Xaxis title.
D 5
"\s+1Processes\s0" rjust at O.se - (0, .5)
E 5
I 5
"\s+1Processes\s0" rjust at O.se - (-.15, .6)
E 5

# Yaxis title (Time in microseconds)
D 5
.ps +2
"T" "i" "m" "e" " " "i" "n" at O.w - (.95, 0)
"m" "i" "c" "r" "o" "s" "e" "c" "o" "n" "d" "s"  at O.w - (.75, 0)
E 5
I 5
.ps +1
"T" "i" "m" "e" " " "i" "n" at O.w - (.85, 0)
"m" "i" "c" "r" "o" "s" "e" "c" "o" "n" "d" "s"  at O.w - (.68, 0)
E 5
.ps

# Graph title.
D 6
.vs 10
D 3
"\s+2Context switches for HP 9000/755@99mhz\s0" at O.n + (-.5, .3)
E 3
I 3
D 5
"\s+2Context switches for" "HP 9000/755@99mhz\s0" at O.n + (-.5, .3)
E 5
I 5
"\s+4Context switches for" "Linux i686@167Mhz\s0" at O.n + (-.5, .3)
E 6
I 6
.vs 12
"\s+2Context switches for" "Linux i686@167Mhz\s0" at O.n + (-.5, .4)
E 6
E 5
E 3
.vs

# Title.
D 5
[ "\(ci" ] at O.sw - (.65, .50 + 0 * vs)
"size=0  overhead=72" ljust at last [].e + (.1, 0)
E 5
I 5
[ "\(ci" ] at O.sw - (.80, .50 + 0 * vs)
"size=0KB \ overhead=10" ljust at last [].e + (.1, 0)
E 5
[ "\(sq" ] at last [] - (0, vs)
D 5
"size=4  overhead=108" ljust at last [].e + (.1, 0)
E 5
I 5
"size=4KB \ overhead=19" ljust at last [].e + (.1, 0)
E 5
[ "\(*D" ] at last [] - (0, vs)
D 5
"size=16 overhead=348" ljust at last [].e + (.1, 0)
E 5
I 5
"size=16KB overhead=66" ljust at last [].e + (.1, 0)
E 5
[ "\(mu" ] at last [] - (0, vs)
D 5
"size=32 overhead=664" ljust at last [].e + (.1, 0)
E 5
I 5
"size=32KB overhead=129" ljust at last [].e + (.1, 0)
E 5
[ "\s+4\(bu\s0" ] at last [] - (0, vs)
D 5
"size=64 overhead=1305" ljust at last [].e + (.1, 0)
E 5
I 5
"size=64KB overhead=255" ljust at last [].e + (.1, 0)
E 5
]
.ft
.ps
D 5
.vs
E 5
I 5
.in
E 5
D 4
.po
E 4
.PE
E 2
I 1
E 1
