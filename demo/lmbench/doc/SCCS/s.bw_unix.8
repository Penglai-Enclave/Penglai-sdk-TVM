h11077
s 00011/00009/00037
d D 1.4 00/10/16 17:13:40 staelin 5 4
c - Update man pages to match current status
cC
cK28071
e
s 00000/00000/00046
d D 1.3 00/10/12 17:05:01 staelin 4 3
c Rename: doc/bw_mem_wr.8 -> doc/bw_unix.8
cK08270
cPdoc/bw_unix.8
e
s 00028/00012/00018
d D 1.2 00/10/12 17:04:29 staelin 3 2
c Replace the contents with a description of bw_unix.
cHhpli8.hpli.hpl.hp.com
cK19921
cZ+02:00
e
s 00030/00000/00000
d D 1.1 94/11/18 01:26:35 lm 2 1
c Initial revision
cC
cK14666
e
s 00000/00000/00000
d D 1.0 94/11/18 01:26:34 lm 1 0
cBlm@lm.bitmover.com|ChangeSet|20000131225335|47351|--LMBENCH--
cHlm.bitmover.com
cK03993
cPdoc/bw_mem_wr.8
cR99ed12a73b549c3
cV4
cX0x23
cZ-08:00
e
u
U
f e 0
f x 0x23
t
lmbench doc checkin
T
I 2
D 3
.\" %W% %G%
.TH BW_MEM_WR 8 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
E 3
I 3
.\" $Id$
.TH BW_UNIX 8 "$Date$" "(c)1994-2000 Larry McVoy and Carl Staelin" "LMBENCH"
E 3
.SH NAME
D 3
bw_mem_wr \- time memory write rate (with overhead)
E 3
I 3
bw_unix \- UNIX pipe bandwidth
E 3
.SH SYNOPSIS
D 3
.B bw_mem_wr
E 3
I 3
.B bw_unix
D 5
.I "[-P <parallelism>]"
.I "[-W <warmup>]"
.I "[-N <repetitions>]"
E 5
I 5
[
.I "-P <parallelism>"
]
[
.I "-W <warmups>"
]
[
.I "-N <repetitions>"
]
E 5
E 3
.I size
.SH DESCRIPTION
D 3
.B bw_mem_wr
allocates the specified amount of memory, zeros it, and then times the
writing of that memory as a series of 4 byte integer stores and increments.  
E 3
I 3
.B bw_unix
creates a pipe and forks a child process which keeps writing
data to the pipe as fast as it can.  The benchmark measures
how fast the parent process can 
.I read 
the data in
.IR size -byte
D 5
chunks from the pipe. 
E 5
I 5
chunks from the pipe. Nothing is done with the data in either
the parent (reader) or child (writer) processes.
E 5
E 3
.LP
D 3
The size
E 3
I 3
The 
.I size
E 3
specification may end with ``k'' or ``m'' to mean
kilobytes (* 1024) or megabytes (* 1024 * 1024).
I 3
D 5

E 5
E 3
.SH OUTPUT
Output format is \f(CB"%0.2f %.2f\\n", megabytes, megabytes_per_second\fP, i.e.,
.sp
.ft CB
8.00 25.33
.ft
D 3
.SH MEMORY UTILIZATION
This benchmark can move up to twice the requested memory.  A processor store
is usually implemented as a read cache line, modify the cache line, and 
store the cache line (now or later, depending on cache write back policy).
E 3
I 3
D 5

E 5
.SH "MEMORY UTILIZATION"
This benchmark should move approximately the reported amount of memory.
D 5

E 5
E 3
.SH ACKNOWLEDGEMENT
Funding for the development of
this tool was provided by Sun Microsystems Computer Corporation.
I 3
D 5

E 5
E 3
.SH "SEE ALSO"
lmbench(8).
I 3
D 5

E 5
.SH "AUTHOR"
Carl Staelin and Larry McVoy
.PP
Comments, suggestions, and bug reports are always welcome.
E 3
E 2
I 1
E 1
